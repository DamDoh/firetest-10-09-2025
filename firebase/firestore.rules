rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Default deny all access to prevent accidental exposure of new collections.
    match /{document=**} {
      allow read, write: if false;
    }

    // --- User Profiles ---
    // Anyone can see a user's public profile.
    // Only the user themselves can create/update their profile.
    match /users/{userId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // --- Farms, Crops, KNF Batches ---
    // Only the owner can read/write their own farm data.
    match /farms/{farmId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.ownerId;
    }
    match /crops/{cropId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.ownerId;
    }
    match /knf_batches/{batchId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
    }
    
    // --- Traceability ---
    // VTI registry and events are primarily managed by backend functions.
    // Read access is granted only for items explicitly marked as public.
    match /vti_registry/{vtiId} {
        allow read: if resource.data.isPublicTraceable == true;
        allow write: if false; // Writes are backend-only.
    }
    match /traceability_events/{eventId} {
        // Safe read: check for existence of the parent VTI doc before accessing its data.
        allow read: if exists(/databases/$(database)/documents/vti_registry/$(resource.data.vtiId)) &&
                     get(/databases/$(database)/documents/vti_registry/$(resource.data.vtiId)).data.isPublicTraceable == true;
        allow write: if false; // Writes are backend-only.
    }
    
    // --- Marketplace ---
    // Anyone can read marketplace listings.
    // Only the seller can create/update/delete their own listings.
    match /marketplaceItems/{itemId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.sellerId;
    }
    // Marketplace coupons can only be managed by the seller.
    match /marketplace_coupons/{couponId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.sellerId;
    }
    // Shops can be read by anyone, but only written by the owner.
    match /shops/{shopId} {
        allow read: if true;
        allow write: if request.auth != null && request.auth.uid == resource.data.ownerId;
    }
    
    // --- Community: Feed Posts ---
    // This assumes a simple 'posts' collection for the main feed.
    match /posts/{postId} {
        allow read: if true;
        allow create: if request.auth != null;
        allow update, delete: if request.auth.uid == resource.data.userId;
        
        match /likes/{userId} {
            allow read: if true;
            allow write: if request.auth.uid == userId;
        }
        match /comments/{commentId} {
            allow read: if true;
            allow create: if request.auth != null;
        }
    }
    
    // --- Community: Forums ---
    match /forums/{topicId} {
        allow read: if true;
        allow create: if request.auth != null;
        // Only creator can edit/delete topic
        allow update, delete: if request.auth.uid == resource.data.createdBy;

        match /posts/{postId} {
            allow read: if true;
            allow create: if request.auth != null;
            allow update, delete: if request.auth.uid == resource.data.authorRef;
            
            match /replies/{replyId} {
                allow read: if true;
                allow create: if request.auth != null;
                allow update, delete: if request.auth.uid == resource.data.authorRef;
            }
        }
    }
    
    // --- Community: Groups ---
    match /groups/{groupId} {
        // Public groups are readable by anyone, private ones only by members
        allow read: if resource.data.isPublic == true || (request.auth != null && exists(/databases/$(database)/documents/groups/$(groupId)/members/$(request.auth.uid)));
        allow create: if request.auth != null;
        allow update, delete: if request.auth.uid == resource.data.ownerId;
        
        match /members/{memberId} {
            allow read: if request.auth != null && (exists(/databases/$(database)/documents/groups/$(groupId)/members/$(request.auth.uid)) || request.auth.uid == get(/databases/$(database)/documents/groups/$(groupId)).data.ownerId);
            // Only user can join/leave, only owner can manage others (add logic later if needed)
            allow write: if request.auth.uid == memberId;
        }
    }
    
    // --- Agri Events ---
    match /agri_events/{eventId} {
        allow read: if true;
        allow create: if request.auth != null;
        allow update, delete: if request.auth.uid == resource.data.organizerId;

        // Registrations: User can register themselves. Organizer can read all registrations.
        match /registrations/{userId} {
            allow read: if request.auth != null && (request.auth.uid == userId || (exists(/databases/$(database)/documents/agri_events/$(eventId)) && request.auth.uid == get(/databases/$(database)/documents/agri_events/$(eventId)).data.organizerId));
            allow write: if request.auth != null && request.auth.uid == userId;
        }
        
        // Coupons: Only the organizer can manage coupons for their event
        match /coupons/{couponId} {
            allow read, write: if request.auth != null && exists(/databases/$(database)/documents/agri_events/$(eventId)) && request.auth.uid == get(/databases/$(database)/documents/agri_events/$(eventId)).data.organizerId;
        }
    }
    
    // --- Financials ---
    match /financial_transactions/{txId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userRef.id;
    }
    match /credit_scores/{userId} {
      allow read: if request.auth.uid == userId;
      allow write: if false; // Only backend can write scores
    }
    
    // --- Notifications ---
    match /notifications/{notificationId} {
        allow read, update: if request.auth.uid == resource.data.userId;
        allow create, delete: if false; // Only backend can manage notifications
    }
    
    // --- Knowledge Base ---
    match /knowledge_base/{docId} {
        allow read: if request.auth != null;
        allow write: if false; // Only backend/admins can write
    }
  }
}
