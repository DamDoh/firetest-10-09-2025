
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read their own profile, but only write to it via secure Cloud Functions
    match /users/{userId} {
      allow read: if request.auth.uid == userId;
      allow write: if false; // All profile writes must go through upsertStakeholderProfile function
      
      // Allow any authenticated user to view another user's certifications
      match /certifications/{certId} {
          allow read: if request.auth != null;
          allow write: if request.auth.uid == userId; // Only the user can add/update their own certs
      }

      // Workers are private to the farmer
      match /workers/{workerId} {
          allow read, write: if request.auth.uid == userId;
          
          match /work_logs/{logId} {
             allow read, write: if request.auth.uid == userId;
          }
           match /payments/{paymentId} {
             allow read, write: if request.auth.uid == userId;
          }
      }
    }
    
    // Allow any authenticated user to read marketplace items
    match /marketplaceItems/{itemId} {
      allow read: if true; // Publicly readable
      allow write: if request.auth.uid == request.resource.data.sellerId; // Only seller can write
    }

    // Allow any authenticated user to create an order
    match /marketplace_orders/{orderId} {
        allow create: if request.auth != null;
        allow read, update: if request.auth.uid == resource.data.buyerId || request.auth.uid == resource.data.sellerId;
    }

    // Allow any authenticated user to read public forum topics
    match /forums/{topicId} {
      allow read: if true;
      allow create: if request.auth != null;
      // Write permissions could be limited to mods/admins
      
      // Allow authenticated users to create posts in a topic
      match /posts/{postId} {
        allow read: if true;
        allow create: if request.auth != null;
        allow update, delete: if request.auth.uid == resource.data.authorRef;
        
        match /replies/{replyId} {
           allow read: if true;
           allow create: if request.auth != null;
           allow update, delete: if request.auth.uid == resource.data.authorRef;
        }
      }
    }
    
    // Allow authenticated users to manage their own connection requests
    match /connection_requests/{requestId} {
      allow read, write, delete: if request.auth.uid == resource.data.requesterId || request.auth.uid == resource.data.recipientId;
      allow create: if request.auth != null;
    }
    
     // Allow any authenticated user to read the knowledge base.
    match /knowledge_base/{docId} {
      allow read: if request.auth != null;
      // Only allow users with an 'admin' or 'curator' custom claim to write.
      allow write: if request.auth.token.admin == true || request.auth.token.curator == true;
    }

    // Default deny all other reads/writes
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
