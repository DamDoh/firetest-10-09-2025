rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }
    
    function isProfileOwner(resourceId) {
        return isOwner(resourceId);
    }
    
    function isEventOrganizer(eventId) {
        return isSignedIn() && get(/databases/$(database)/documents/agri_events/$(eventId)).data.organizerId == request.auth.uid;
    }
    
     function isEventStaff(eventId) {
        return isSignedIn() && exists(/databases/$(database)/documents/agri_events/$(eventId)/staff/$(request.auth.uid));
    }
    
    function isServiceOperator(serviceId) {
         return isSignedIn() && get(/databases/$(database)/documents/marketplaceItems/$(serviceId)).data.sellerId == request.auth.uid;
    }
    
    function isServiceStaff(serviceId) {
        return isSignedIn() && exists(/databases/$(database)/documents/marketplaceItems/$(serviceId)/staff/$(request.auth.uid));
    }


    // User Profiles
    match /users/{userId} {
      allow read: if true;
      allow create: if isSignedIn(); // Allow user creation via registerUser function
      allow update: if isOwner(userId);
      allow delete: if isOwner(userId); // Or admin

      // User subcollections (e.g., certifications, workers)
      match /{subcollection}/{docId} {
         allow read, write: if isOwner(userId);
      }
    }

    // Marketplace
    match /marketplaceItems/{itemId} {
      allow read: if true;
      allow create: if isSignedIn();
      allow update: if isSignedIn() && resource.data.sellerId == request.auth.uid;
      allow delete: if isSignedIn() && resource.data.sellerId == request.auth.uid;

      // Bookings & Staff for Agro-Tourism
      match /bookings/{bookingId} {
        allow read: if isServiceOperator(itemId);
        allow create: if isSignedIn(); // Users can book for themselves
        allow update: if isServiceOperator(itemId) || isServiceStaff(itemId);
      }
       match /staff/{staffId} {
        allow read: if isServiceOperator(itemId);
        allow write: if isServiceOperator(itemId);
      }
    }
    
    match /marketplace_orders/{orderId} {
        allow read, write: if isSignedIn() && (request.auth.uid == resource.data.buyerId || request.auth.uid == resource.data.sellerId);
        allow create: if isSignedIn();
    }
    
     match /marketplace_coupons/{couponId} {
        allow read: if true;
        allow create, update, delete: if isSignedIn() && request.resource.data.sellerId == request.auth.uid;
     }

    // Community Feed
    match /posts/{postId} {
      allow read: if true;
      allow create: if isSignedIn();
      allow update, delete: if isOwner(resource.data.userId);

      match /likes/{userId} {
        allow read: if true;
        allow write: if isOwner(userId);
      }
      match /comments/{commentId} {
        allow read: if true;
        allow create: if isSignedIn();
        allow update, delete: if isOwner(resource.data.userId);
      }
    }

    // Forums
    match /forums/{topicId} {
      allow read: if true;
      allow create: if isSignedIn();
      allow update, delete: if isOwner(resource.data.creatorId);

       match /posts/{postId} {
        allow read: if true;
        allow create: if isSignedIn();
        allow update, delete: if isOwner(resource.data.authorRef);

        match /replies/{replyId} {
            allow read: if true;
            allow create: if isSignedIn();
            allow update, delete: if isOwner(resource.data.authorRef);
        }
       }
    }
    
    // Groups
    match /groups/{groupId} {
        allow read: if true;
        allow create: if isSignedIn();
        allow update, delete: if isOwner(resource.data.ownerId);

        match /members/{memberId} {
            allow read: if true;
            allow write: if isSignedIn(); // Join/leave is managed by cloud functions
        }

        match /posts/{postId} {
            allow read: if exists(/databases/$(database)/documents/groups/$(groupId)/members/$(request.auth.uid));
            allow create, update, delete: if isOwner(resource.data.authorRef);
        }
    }

    // Traceability
    match /traceability_events/{eventId} {
      allow read: if true;
      allow write: if isSignedIn(); // Should be done via secure cloud functions
    }
    match /vti_registry/{vtiId} {
      allow read: if true;
      allow write: if isSignedIn(); // Should be done via secure cloud functions
    }

    // KNF & Farm Management
    match /farms/{farmId} {
      allow read, write: if isOwner(resource.data.ownerId);
      allow create: if isSignedIn();
    }
    match /crops/{cropId} {
      allow read, write: if isOwner(resource.data.ownerId);
      allow create: if isSignedIn();
    }
    match /knf_batches/{batchId} {
      allow read, write: if isOwner(resource.data.userId);
      allow create: if isSignedIn();
    }
    
    // Agri-Events
    match /agri_events/{eventId} {
        allow read: if true;
        allow create: if isSignedIn();
        allow update: if isEventOrganizer(eventId);
        
        match /attendees/{attendeeId} {
            allow read: if isEventOrganizer(eventId) || isEventStaff(eventId);
            allow create: if isSignedIn(); // Registration
        }
        
         match /coupons/{couponId} {
            allow read, write: if isEventOrganizer(eventId);
        }
        
        match /staff/{staffId} {
            allow read: if isEventOrganizer(eventId);
            allow write: if isEventOrganizer(eventId);
        }
    }
    
    // Financials
    match /financial_transactions/{txId} {
        allow read, write: if isOwner(resource.data.userRef.id);
    }
    match /financial_applications/{appId} {
         allow read, write: if isSignedIn(); // Logic handled by cloud functions
    }
     match /credit_scores/{userId} {
        allow read: if isOwner(userId);
        // Scores are only written by backend triggers
        allow write: if false; 
     }

    // Knowledge Hub
    match /knowledge_articles/{articleId} {
      allow read: if true;
      // Writing/editing is an admin function
      allow write: if false;
    }
    match /knowledge_base/{docId} {
        allow read: if isSignedIn();
        allow write: if false; // Only admin
    }
    
    // Notifications
    match /notifications/{notificationId} {
        allow read, write: if isOwner(resource.data.userId);
    }
    
    // Connections & Profile Views (managed by cloud functions)
    match /connection_requests/{reqId} {
        allow read: if isSignedIn() && (request.auth.uid == resource.data.requesterId || request.auth.uid == resource.data.recipientId);
        allow create, update: if isSignedIn();
    }
    match /profile_views/{viewId} {
        allow create: if isSignedIn();
    }
    
    // Universal ID Recovery Sessions
    match /recovery_sessions/{sessionId} {
        allow read, write: if true; // Managed entirely by secure cloud functions
    }
    
    // Search Index
    match /search_index/{docId} {
        allow read: if isSignedIn();
        allow write: if false; // Only written by backend trigger
    }
  }
}
