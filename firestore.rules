
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check if a user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if the requesting user is the owner of a document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // =================================
    // Users Collection
    // =================================
    match /users/{userId} {
      // Anyone can read a user's public profile
      allow read: if true;
      // Only the user themselves can create or update their own profile
      allow write: if isOwner(userId);
      // Nobody can delete user profiles from the client
      allow delete: if false;
    }

    // =================================
    // Marketplace, Orders & Coupons
    // =================================
    match /marketplaceItems/{listingId} {
      // Anyone can read marketplace listings
      allow read: if true;
      // Any authenticated user can create a listing
      allow create: if isAuthenticated();
      // Only the seller can update or delete their own listing
      allow update, delete: if isOwner(resource.data.sellerId);
    }
    
    match /marketplace_orders/{orderId} {
      // Only the buyer or seller can read an order
      allow read: if isOwner(resource.data.buyerId) || isOwner(resource.data.sellerId);
      // Orders are created by backend functions, not directly by clients
      allow write: if false;
    }

    match /marketplace_coupons/{couponId} {
        // Coupons can only be read by the seller or validated by a cloud function
        allow read: if isOwner(resource.data.sellerId);
        // Coupons are created by backend functions
        allow write: if false;
    }


    // =================================
    // Farm Management Collections
    // =================================
    match /farms/{farmId} {
      // A user can read/write/delete only their own farm documents
      allow read, write, delete: if isOwner(resource.data.owner_id);
      allow create: if isOwner(request.resource.data.owner_id);
    }

    match /crops/{cropId} {
      // A user can read/write/delete only their own crop documents
      allow read, write, delete: if isOwner(resource.data.owner_id);
      allow create: if isOwner(request.resource.data.owner_id);
    }
    
    match /knf_batches/{batchId} {
      // A user can read/write/delete only their own KNF batches
      allow read, write, delete: if isOwner(resource.data.userId);
      allow create: if isOwner(request.resource.data.userId);
    }

    // =================================
    // Community (Forums & Groups)
    // =================================
    match /forums/{topicId} {
      // Any authenticated user can read topics
      allow read: if isAuthenticated();
      // Any authenticated user can create a new topic
      allow create: if isAuthenticated();
      // Only the creator can update/delete their topic (can be expanded to admins/mods)
      allow update, delete: if isOwner(resource.data.createdBy);
    }

    match /forums/{topicId}/posts/{postId} {
        // Any authenticated user can read posts
        allow read: if isAuthenticated();
        // Any authenticated user can create a post
        allow create: if isAuthenticated();
        // Only post author can update/delete
        allow update, delete: if isOwner(resource.data.authorRef);
    }

    match /forums/{topicId}/posts/{postId}/replies/{replyId} {
        // Any authenticated user can read replies
        allow read: if isAuthenticated();
        // Any authenticated user can create a reply
        allow create: if isAuthenticated();
        // Only reply author can update/delete
        allow update, delete: if isOwner(resource.data.authorRef);
    }
    
    match /groups/{groupId} {
        // Allow read if the group is public, or if the user is a member (future implementation)
        allow read: if resource.data.isPublic == true || isAuthenticated(); // Simplified for now
        // Any authenticated user can create a group
        allow create: if isAuthenticated();
        // Only the owner can update/delete
        allow update, delete: if isOwner(resource.data.ownerId);
    }
    
     match /groups/{groupId}/members/{memberId} {
        // A user can join/leave a group (write to their own member doc)
        allow write: if isOwner(memberId);
        // Members can read the member list
        allow read: if isAuthenticated();
     }


    // =================================
    // Read-Only & Backend-Managed Collections
    // =================================
    match /knowledge_base/{docId} {
      // Anyone authenticated can read the knowledge base
      allow read: if isAuthenticated();
      // No client-side writes
      allow write: if false;
    }
    
    match /traceability_events/{eventId} {
       // Only allow reading of public events or events related to the user
       allow read: if isAuthenticated();
       // All events must be logged via backend Cloud Functions
       allow write: if false;
    }

    // Default deny all other collections
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
