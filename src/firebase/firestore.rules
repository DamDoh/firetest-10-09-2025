
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // --- Default Deny All ---
    // By default, no one can read or write to any document.
    // Specific rules below will grant permissions.
    match /{document=**} {
      allow read, write: if false;
    }
    
    // --- User Profiles ---
    match /users/{userId} {
      // Anyone can read a user's public profile data.
      allow read: if true;
      // Only the user themselves can update their own profile.
      allow update: if request.auth.uid == userId;
      // No one can create or delete user profiles directly; this is handled by backend functions.
      allow create, delete: if false;

      // User-specific sub-collections
      match /workers/{workerId} {
        allow read, write, delete: if request.auth.uid == userId;
      }
      match /financial_transactions/{txId} {
        allow read, write, delete: if request.auth.uid == userId;
      }
      match /knf_batches/{batchId} {
        allow read, write, delete: if request.auth.uid == userId;
      }
       match /api_keys/{keyId} {
        allow read, write, delete: if request.auth.uid == userId;
      }
    }
    
    // --- Community & Content ---
    match /posts/{postId} {
      allow read: if true;
      allow create: if request.auth.uid == request.resource.data.userId;
      allow update: if request.auth.uid == resource.data.userId;
      allow delete: if request.auth.uid == resource.data.userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.primaryRole == 'Admin';
      
      match /comments/{commentId} {
        allow read: if true;
        allow create: if request.auth.uid != null;
        // Add rules for update/delete if that feature is added
      }
      match /likes/{userId} {
        allow read: if true;
        allow create, delete: if request.auth.uid == userId;
      }
       match /votes/{userId} {
        allow read: if true;
        allow create: if request.auth.uid == userId;
      }
    }

    match /forums/{topicId} {
        allow read, write: if request.auth != null;
        match /posts/{postId} {
            allow read, write: if request.auth != null;
             match /replies/{replyId} {
                allow read, write: if request.auth != null;
            }
        }
    }
    
    match /groups/{groupId} {
        allow read: if true; // Allow anyone to see group basic info
        allow create: if request.auth != null;
        allow update: if request.auth.uid == resource.data.ownerId; // Only owner can edit group details

        match /members/{memberId} {
            allow read: if true;
            // Only the user themselves can join/leave (via backend function)
            allow write: if request.auth.uid == memberId;
        }

        match /posts/{postId} {
            // Must be a member to read/write posts
            allow read, write: if exists(/databases/$(database)/documents/groups/$(groupId)/members/$(request.auth.uid));
        }
    }

    // --- Marketplace ---
    match /marketplaceItems/{itemId} {
      allow read: if true;
      allow create: if request.auth.uid == request.resource.data.sellerId;
      allow update: if request.auth.uid == resource.data.sellerId;
      allow delete: if request.auth.uid == resource.data.sellerId;
    }
    
    match /marketplace_orders/{orderId} {
        // Only the buyer or seller can read the order.
        allow read: if request.auth.uid == resource.data.buyerId || request.auth.uid == resource.data.sellerId;
        allow create: if request.auth.uid == request.resource.data.buyerId; // Only buyer can create
        allow update: if request.auth.uid == resource.data.sellerId; // Only seller can update status
    }
    
    // --- Events ---
    match /agri_events/{eventId} {
        allow read: if true;
        allow create, update: if request.auth.uid == request.resource.data.organizerId;
        match /attendees/{attendeeId} {
            // Any logged-in user can register (write their own doc)
            allow create: if request.auth.uid == attendeeId;
            // Only the user or organizer can read registration info
            allow read: if request.auth.uid == attendeeId || request.auth.uid == get(/databases/$(database)/documents/agri_events/$(eventId)).data.organizerId;
        }
    }
    
    // --- Knowledge Hub & Admin ---
    match /knowledge_articles/{articleId} {
        allow read: if true;
        // Writes are only allowed via backend functions (e.g., admin panel)
        allow write: if false;
    }

    // --- System Collections (read-only for clients) ---
    match /search_index/{docId} {
      allow read: if request.auth != null;
      allow write: if false; // Only backend can write
    }
    
    match /offline_changes_log/{changeId} {
      // Only the user who created the log can read it. No one can write directly.
      allow read: if request.auth.uid == resource.data.userId;
      allow write: if false;
    }

    // --- Notifications (user-specific) ---
    match /notifications/{notificationId} {
      allow read, update: if request.auth.uid == resource.data.userId;
      allow create, delete: if false; // Handled by backend triggers
    }

  }
}
